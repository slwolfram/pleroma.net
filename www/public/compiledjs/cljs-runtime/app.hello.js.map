{"version":3,"sources":["app/hello.cljs"],"mappings":";AAIA,AAAA,AAAMC,AAAeC;AAArB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGIE;AAHJ,AAKuB,AAACC,AAAMD,AAAYE;;;AAE1C,AAAA,AAAMC;AAAN,AAAA;;AAIA,AAAA,AAAMC,AAAcC;AAApB,AACE,AAAMC,AAAE,AAAA,AAAA,AAACC,AAAqBF;AAA9B,AACE;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAG,AAEG,AAAA,AAAAV,AAACY,AAAQJ,AAEO,AAAA,AAAA,AAAAR,AAASQ;AAJ5B,AAKwB,AAAA,AAACL,AAAMK,AAAEK,AAAa,AAAA,AAAAH;AAL9C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAO6B,AAAA,AAAA,AAAAX,AAASQ;AAPtC,AAQgC,AAAA,AAACL,AAAMK,AAAEK,AAAa,AAAA,AAAAF;AARtD;;;AAWJ,AAAA,AAAMG;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGGR;;AAEH,AAAA,AAAMS;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAWA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAUI,AAACF,AACD,AAACC,AACD","names":["cljs.core/deref","app.hello/click-counter","click-count","cljs.core.swap_BANG_","cljs.core/inc","app.hello/navbar","app.hello/password-box","pw","s","reagent.core.atom","p1__28439#","p1__28440#","cljs.core.pr_str","cljs.core/assoc","app.hello/header","app.hello/tree-of-life","app.hello/hello"],"sourcesContent":["(ns app.hello\n  (:require [reagent.core :as reagent]\n            [garden.core :refer [css]]))\n\n(defn click-counter [click-count]\n  [:div\n   \"The atom \" [:code \"click-count\"] \" has value: \"\n   @click-count \". \"\n   [:input {:type \"button\" :value \"Click me!\"\n            :on-click #(swap! click-count inc)}]])\n\n(defn navbar [])\n\n\n\n(defn password-box [pw]\n  (let [s (reagent/atom {:value pw})]\n    (fn []\n      [:form\n       (pr-str @s) [:br]\n       [:input {:type :password\n                :value (:value @s)\n                :on-change #(swap! s assoc :value (-> % .-target .-value))}][:br]\n       [:label [:input {:type :checkbox\n                        :checked (:show? @s)\n                        :on-change #(swap! s assoc :show? (-> % .-target .-checked))}]\n        \"Show password?\"]])))\n\n(defn header []\n  [:div\n  [:h1 \"pleroma|net\"]\n  [password-box \"\"]])\n\n(defn tree-of-life []\n  [:div {:id \"treeoflife\"}\n  \n   [:table {:style {:width \"100%\"}}\n    [:tbody\n     [:tr [:td 0] [:td 1] [:td 2] [:td 3] [:td \"O\"] [:td 0] [:td 1] [:td 2] [:td 3]]\n     [:tr [:td 1] [:td 2] [:td 4] [:td 7] [:td]]\n     [:tr [:td 2] [:td 3] [:td 7] [:td 4] [:td]]\n     [:tr [:td 3] [:td 4] [:td 1] [:td 5] [:td]]\n     [:tr [:td] [:td] [:td] [:td] [:td]]]]])\n\n(defn hello []\n\n  [:<>\n\n   [:div\n    {:style\n     {:font-family 'Courier\n      :color '\"#DEFF00\"\n      }}\n\n    (header)\n    (tree-of-life)\n    (comment\n      [:p \"Hello, rhizome is running!\"]\n      [:p \"Here's an example of using a component with state:\"]\n      [click-counter click-count])]])\n"]}